.MODEL SMALL
.STACK 100H

.DATA

.CODE

PRINTLN PROC 
    POP BX  ; IP POPPED
    POP AX  ; NUMBER POPPED
    PUSH BX ; IP PUSHED
    CMP AX,0
    JGE POS
    NEG AX
    MOV BX,AX
    MOV AH,2
    MOV DX,'-'
    INT 21H
    MOV AX,BX
POS:
    XOR CX,CX
    MOV BX,10
    MOV DX,0
WHILE_LOOP:
    MOV DX,0
    DIV BX
    INC CX
    PUSH DX
    CMP AX,0
    JE END_WHILE
    JMP WHILE_LOOP
END_WHILE:
    MOV AH,2
TOP:
    POP DX
    ADD DX,'0'
    INT 21H
    LOOP TOP
    MOV DX,0AH
    INT 21H
    MOV DX,0DH
    INT 21H
    RET
PRINTLN ENDP


PRINTCHAR PROC
    POP BX  ; IP POPPED
    POP AX  ; NUMBER POPPED
    PUSH BX ; IP PUSHED
    MOV DX,AX
    MOV AH,2
    INT 21H
    RET
PRINTCHAR ENDP

main PROC

MOV AX,@DATA
MOV DS,AX
PUSH AX
MOV AX,20
PUSH AX
POP AX
MOV BP,SP
MOV [BP+0],AX
PUSH AX
POP BX
L2:
MOV BP,SP
MOV AX,[BP+0]
PUSH AX
MOV AX,0
PUSH AX
POP AX
POP BX
CMP BX,AX
JL L6
PUSH 1
JMP L5
L6: 
PUSH 0
L5: 
POP BX
CMP BX,0
JE L1
JMP L4
L3:
MOV BP,SP
MOV AX,[BP+0]
MOV BX,AX
DEC AX
MOV [BP+0],AX
PUSH BX
POP AX
JMP L2
L4:
MOV BP,SP
MOV AX,[BP+0]
PUSH AX
CALL PRINTLN
JMP L3
L1:
POP AX
MOV AX,4CH
INT 21H

main ENDP

END main

