.MODEL SMALL
.STACK 100H

.DATA

.CODE

PRINTLN PROC 
    POP BX  ; IP POPPED
    POP AX  ; NUMBER POPPED
    PUSH BX ; IP PUSHED
    CMP AX,0
    JGE POS
    NEG AX
    MOV BX,AX
    MOV AH,2
    MOV DX,'-'
    INT 21H
    MOV AX,BX
POS:
    XOR CX,CX
    MOV BX,10
    MOV DX,0
WHILE_LOOP:
    MOV DX,0
    DIV BX
    INC CX
    PUSH DX
    CMP AX,0
    JE END_WHILE
    JMP WHILE_LOOP
END_WHILE:
    MOV AH,2
TOP:
    POP DX
    ADD DX,'0'
    INT 21H
    LOOP TOP
    MOV DX,0AH
    INT 21H
    MOV DX,0DH
    INT 21H
    RET
PRINTLN ENDP


PRINTCHAR PROC
    POP BX  ; IP POPPED
    POP AX  ; NUMBER POPPED
    PUSH BX ; IP PUSHED
    MOV DX,AX
    MOV AH,2
    INT 21H
    RET
PRINTCHAR ENDP

main PROC

MOV AX,@DATA
MOV DS,AX
PUSH AX
PUSH AX
PUSH AX
PUSH AX
PUSH AX
MOV AX,1
PUSH AX
MOV AX,2
PUSH AX
MOV AX,3
PUSH AX
POP AX 
POP BX
ADD AX,BX 
PUSH AX
POP AX 
POP BX 
MUL BX 
PUSH AX
MOV AX,3
PUSH AX
POP BX
POP AX
XOR DX,DX
IDIV BX
PUSH DX
POP AX
MOV BP,SP
MOV [BP+8],AX
PUSH AX
POP AX
MOV AX,1
PUSH AX
MOV AX,5
PUSH AX
POP AX
POP BX
CMP BX,AX
JGE L2
PUSH 1
JMP L1
L2: 
PUSH 0
L1: 
POP AX
MOV BP,SP
MOV [BP+6],AX
PUSH AX
POP AX
MOV AX,0
PUSH AX
MOV AX,2
PUSH AX
POP CX
POP AX
MOV BP,SP
MOV BX,2
MUL BX
ADD AX,0
ADD BP,AX
MOV [BP],CX
PUSH CX
POP AX
MOV BP,SP
MOV AX,[BP+8]
PUSH AX
MOV BP,SP
MOV AX,[BP+8]
PUSH AX
POP BX
POP AX
CMP AX,0
JE L4
CMP BX,0
JE L4
PUSH 1
JMP L3
L4: 
PUSH 0
L3: 
POP AX
CMP AX,0
JE L5

MOV AX,0
PUSH AX
POP AX 
MOV BX,2 
MUL BX
ADD AX,0
MOV BP,SP
ADD BP,AX
MOV AX,[BP] 
INC AX 
MOV [BP],AX 
PUSH AX
POP AX
JMP L6
L5:

MOV AX,1
PUSH AX
MOV AX,0
PUSH AX
POP AX 
MOV BX,2 
MUL BX
ADD AX,2
MOV BP,SP
ADD BP,AX
MOV AX,[BP]
PUSH AX
POP CX
POP AX
MOV BP,SP
MOV BX,2
MUL BX
ADD AX,0
ADD BP,AX
MOV [BP],CX
PUSH CX
POP AX
L6:

MOV BP,SP
MOV AX,[BP+8]
PUSH AX
CALL PRINTLN
MOV BP,SP
MOV AX,[BP+6]
PUSH AX
CALL PRINTLN
POP AX
POP AX
POP AX
POP AX
POP AX
MOV AX,4CH
INT 21H


main ENDP

END main

